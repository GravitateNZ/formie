/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/captchas/inc/defer.js":
/*!**************************************!*\
  !*** ./src/js/captchas/inc/defer.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nvar defer = function defer() {\n  var state = false; // Resolved or not\n\n  var callbacks = [];\n\n  var resolve = function resolve(val) {\n    if (state) {\n      return;\n    }\n\n    state = true;\n\n    for (var i = 0, len = callbacks.length; i < len; i++) {\n      callbacks[i](val);\n    }\n  };\n\n  var then = function then(cb) {\n    if (!state) {\n      callbacks.push(cb);\n      return;\n    }\n\n    cb();\n  };\n\n  var deferred = {\n    resolved: function resolved() {\n      return state;\n    },\n    resolve: resolve,\n    promise: {\n      then: then\n    }\n  };\n  return deferred;\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (defer);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvanMvY2FwdGNoYXMvaW5jL2RlZmVyLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxJQUFNQSxLQUFLLEdBQUcsU0FBUkEsS0FBUSxHQUFNO0VBQ2hCLElBQUlDLEtBQUssR0FBRyxLQUFaLENBRGdCLENBQ0c7O0VBRW5CLElBQU1DLFNBQVMsR0FBRyxFQUFsQjs7RUFFQSxJQUFNQyxPQUFPLEdBQUcsU0FBVkEsT0FBVSxDQUFDQyxHQUFELEVBQVM7SUFDckIsSUFBSUgsS0FBSixFQUFXO01BQ1A7SUFDSDs7SUFFREEsS0FBSyxHQUFHLElBQVI7O0lBRUEsS0FBSyxJQUFJSSxDQUFDLEdBQUcsQ0FBUixFQUFXQyxHQUFHLEdBQUdKLFNBQVMsQ0FBQ0ssTUFBaEMsRUFBd0NGLENBQUMsR0FBR0MsR0FBNUMsRUFBaURELENBQUMsRUFBbEQsRUFBc0Q7TUFDbERILFNBQVMsQ0FBQ0csQ0FBRCxDQUFULENBQWFELEdBQWI7SUFDSDtFQUNKLENBVkQ7O0VBWUEsSUFBTUksSUFBSSxHQUFHLFNBQVBBLElBQU8sQ0FBQ0MsRUFBRCxFQUFRO0lBQ2pCLElBQUksQ0FBQ1IsS0FBTCxFQUFZO01BQ1JDLFNBQVMsQ0FBQ1EsSUFBVixDQUFlRCxFQUFmO01BQ0E7SUFDSDs7SUFFREEsRUFBRTtFQUNMLENBUEQ7O0VBU0EsSUFBTUUsUUFBUSxHQUFHO0lBQ2JDLFFBRGEsc0JBQ0Y7TUFDUCxPQUFPWCxLQUFQO0lBQ0gsQ0FIWTtJQUliRSxPQUFPLEVBQVBBLE9BSmE7SUFLYlUsT0FBTyxFQUFFO01BQ0xMLElBQUksRUFBSkE7SUFESztFQUxJLENBQWpCO0VBVUEsT0FBT0csUUFBUDtBQUNILENBckNEOztBQXVDQSxpRUFBZVgsS0FBZiIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9qcy9jYXB0Y2hhcy9pbmMvZGVmZXIuanM/Y2Q1OSJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBkZWZlciA9ICgpID0+IHtcbiAgICBsZXQgc3RhdGUgPSBmYWxzZTsgLy8gUmVzb2x2ZWQgb3Igbm90XG5cbiAgICBjb25zdCBjYWxsYmFja3MgPSBbXTtcblxuICAgIGNvbnN0IHJlc29sdmUgPSAodmFsKSA9PiB7XG4gICAgICAgIGlmIChzdGF0ZSkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgc3RhdGUgPSB0cnVlO1xuXG4gICAgICAgIGZvciAobGV0IGkgPSAwLCBsZW4gPSBjYWxsYmFja3MubGVuZ3RoOyBpIDwgbGVuOyBpKyspIHtcbiAgICAgICAgICAgIGNhbGxiYWNrc1tpXSh2YWwpO1xuICAgICAgICB9XG4gICAgfTtcblxuICAgIGNvbnN0IHRoZW4gPSAoY2IpID0+IHtcbiAgICAgICAgaWYgKCFzdGF0ZSkge1xuICAgICAgICAgICAgY2FsbGJhY2tzLnB1c2goY2IpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgY2IoKTtcbiAgICB9O1xuXG4gICAgY29uc3QgZGVmZXJyZWQgPSB7XG4gICAgICAgIHJlc29sdmVkKCkge1xuICAgICAgICAgICAgcmV0dXJuIHN0YXRlO1xuICAgICAgICB9LFxuICAgICAgICByZXNvbHZlLFxuICAgICAgICBwcm9taXNlOiB7XG4gICAgICAgICAgICB0aGVuLFxuICAgICAgICB9LFxuICAgIH07XG5cbiAgICByZXR1cm4gZGVmZXJyZWQ7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBkZWZlcjtcbiJdLCJuYW1lcyI6WyJkZWZlciIsInN0YXRlIiwiY2FsbGJhY2tzIiwicmVzb2x2ZSIsInZhbCIsImkiLCJsZW4iLCJsZW5ndGgiLCJ0aGVuIiwiY2IiLCJwdXNoIiwiZGVmZXJyZWQiLCJyZXNvbHZlZCIsInByb21pc2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/js/captchas/inc/defer.js\n");

/***/ }),

/***/ "./src/js/captchas/inc/turnstile.js":
/*!******************************************!*\
  !*** ./src/js/captchas/inc/turnstile.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createTurnstile\": () => (/* binding */ createTurnstile),\n/* harmony export */   \"turnstile\": () => (/* binding */ turnstile)\n/* harmony export */ });\n/* harmony import */ var _defer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./defer */ \"./src/js/captchas/inc/defer.js\");\n\nvar ownProp = Object.prototype.hasOwnProperty;\nfunction createTurnstile() {\n  var deferred = (0,_defer__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(); // In order to handle multiple recaptchas on a page, store all renderers (promises)\n  // in a central store. When reCAPTCHA is loaded, notify all promises that it's ready.\n\n  if (!window.turnstileRenderers) {\n    window.turnstileRenderers = [];\n  } // Store the promise in our renderers store\n\n\n  window.turnstileRenderers.push(deferred);\n  return {\n    notify: function notify() {\n      // Be sure to notify all renderers that reCAPTCHA is ready, as soon as at least one is ready\n      // As is - as soon as `window.turnstile` is available.\n      for (var i = 0, len = window.turnstileRenderers.length; i < len; i++) {\n        window.turnstileRenderers[i].resolve();\n      }\n    },\n    wait: function wait() {\n      return deferred.promise;\n    },\n    render: function render(ele, options, cb) {\n      this.wait().then(function () {\n        cb(window.turnstile.render(ele, options));\n      });\n    },\n    reset: function reset(widgetId) {\n      if (typeof widgetId === 'undefined') {\n        return;\n      }\n\n      this.assertLoaded();\n      this.wait().then(function () {\n        return window.turnstile.reset(widgetId);\n      });\n    },\n    execute: function execute(widgetId) {\n      if (typeof widgetId === 'undefined') {\n        return;\n      }\n\n      this.assertLoaded();\n      this.wait().then(function () {\n        return window.turnstile.execute(widgetId);\n      });\n    },\n    checkCaptchaLoad: function checkCaptchaLoad() {\n      if (ownProp.call(window, 'turnstile') && ownProp.call(window.turnstile, 'render')) {\n        this.notify();\n      }\n    },\n    assertLoaded: function assertLoaded() {\n      if (!deferred.resolved()) {\n        throw new Error('Turnstile has not been loaded');\n      }\n    }\n  };\n}\nvar turnstile = createTurnstile();\n\nif (typeof window !== 'undefined') {\n  window.formieTurnstileOnLoadCallback = turnstile.notify;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvanMvY2FwdGNoYXMvaW5jL3R1cm5zdGlsZS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUVBLElBQU1DLE9BQU8sR0FBR0MsTUFBTSxDQUFDQyxTQUFQLENBQWlCQyxjQUFqQztBQUVPLFNBQVNDLGVBQVQsR0FBMkI7RUFDOUIsSUFBTUMsUUFBUSxHQUFHTixrREFBSyxFQUF0QixDQUQ4QixDQUc5QjtFQUNBOztFQUNBLElBQUksQ0FBQ08sTUFBTSxDQUFDQyxrQkFBWixFQUFnQztJQUM1QkQsTUFBTSxDQUFDQyxrQkFBUCxHQUE0QixFQUE1QjtFQUNILENBUDZCLENBUzlCOzs7RUFDQUQsTUFBTSxDQUFDQyxrQkFBUCxDQUEwQkMsSUFBMUIsQ0FBK0JILFFBQS9CO0VBRUEsT0FBTztJQUNISSxNQURHLG9CQUNNO01BQ0w7TUFDQTtNQUNBLEtBQUssSUFBSUMsQ0FBQyxHQUFHLENBQVIsRUFBV0MsR0FBRyxHQUFHTCxNQUFNLENBQUNDLGtCQUFQLENBQTBCSyxNQUFoRCxFQUF3REYsQ0FBQyxHQUFHQyxHQUE1RCxFQUFpRUQsQ0FBQyxFQUFsRSxFQUFzRTtRQUNsRUosTUFBTSxDQUFDQyxrQkFBUCxDQUEwQkcsQ0FBMUIsRUFBNkJHLE9BQTdCO01BQ0g7SUFDSixDQVBFO0lBU0hDLElBVEcsa0JBU0k7TUFDSCxPQUFPVCxRQUFRLENBQUNVLE9BQWhCO0lBQ0gsQ0FYRTtJQWFIQyxNQWJHLGtCQWFJQyxHQWJKLEVBYVNDLE9BYlQsRUFha0JDLEVBYmxCLEVBYXNCO01BQ3JCLEtBQUtMLElBQUwsR0FBWU0sSUFBWixDQUFpQixZQUFNO1FBQ25CRCxFQUFFLENBQUNiLE1BQU0sQ0FBQ2UsU0FBUCxDQUFpQkwsTUFBakIsQ0FBd0JDLEdBQXhCLEVBQTZCQyxPQUE3QixDQUFELENBQUY7TUFDSCxDQUZEO0lBR0gsQ0FqQkU7SUFtQkhJLEtBbkJHLGlCQW1CR0MsUUFuQkgsRUFtQmE7TUFDWixJQUFJLE9BQU9BLFFBQVAsS0FBb0IsV0FBeEIsRUFBcUM7UUFDakM7TUFDSDs7TUFFRCxLQUFLQyxZQUFMO01BRUEsS0FBS1YsSUFBTCxHQUFZTSxJQUFaLENBQWlCLFlBQU07UUFBRSxPQUFPZCxNQUFNLENBQUNlLFNBQVAsQ0FBaUJDLEtBQWpCLENBQXVCQyxRQUF2QixDQUFQO01BQTBDLENBQW5FO0lBQ0gsQ0EzQkU7SUE2QkhFLE9BN0JHLG1CQTZCS0YsUUE3QkwsRUE2QmU7TUFDZCxJQUFJLE9BQU9BLFFBQVAsS0FBb0IsV0FBeEIsRUFBcUM7UUFDakM7TUFDSDs7TUFFRCxLQUFLQyxZQUFMO01BQ0EsS0FBS1YsSUFBTCxHQUFZTSxJQUFaLENBQWlCLFlBQU07UUFBRSxPQUFPZCxNQUFNLENBQUNlLFNBQVAsQ0FBaUJJLE9BQWpCLENBQXlCRixRQUF6QixDQUFQO01BQTRDLENBQXJFO0lBQ0gsQ0FwQ0U7SUFzQ0hHLGdCQXRDRyw4QkFzQ2dCO01BQ2YsSUFBSTFCLE9BQU8sQ0FBQzJCLElBQVIsQ0FBYXJCLE1BQWIsRUFBcUIsV0FBckIsS0FBcUNOLE9BQU8sQ0FBQzJCLElBQVIsQ0FBYXJCLE1BQU0sQ0FBQ2UsU0FBcEIsRUFBK0IsUUFBL0IsQ0FBekMsRUFBbUY7UUFDL0UsS0FBS1osTUFBTDtNQUNIO0lBQ0osQ0ExQ0U7SUE0Q0hlLFlBNUNHLDBCQTRDWTtNQUNYLElBQUksQ0FBQ25CLFFBQVEsQ0FBQ3VCLFFBQVQsRUFBTCxFQUEwQjtRQUN0QixNQUFNLElBQUlDLEtBQUosQ0FBVSwrQkFBVixDQUFOO01BQ0g7SUFDSjtFQWhERSxDQUFQO0FBa0RIO0FBRU0sSUFBTVIsU0FBUyxHQUFHakIsZUFBZSxFQUFqQzs7QUFFUCxJQUFJLE9BQU9FLE1BQVAsS0FBa0IsV0FBdEIsRUFBbUM7RUFDL0JBLE1BQU0sQ0FBQ3dCLDZCQUFQLEdBQXVDVCxTQUFTLENBQUNaLE1BQWpEO0FBQ0giLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvY2FwdGNoYXMvaW5jL3R1cm5zdGlsZS5qcz85OTlmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBkZWZlciBmcm9tICcuL2RlZmVyJztcblxuY29uc3Qgb3duUHJvcCA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVUdXJuc3RpbGUoKSB7XG4gICAgY29uc3QgZGVmZXJyZWQgPSBkZWZlcigpO1xuXG4gICAgLy8gSW4gb3JkZXIgdG8gaGFuZGxlIG11bHRpcGxlIHJlY2FwdGNoYXMgb24gYSBwYWdlLCBzdG9yZSBhbGwgcmVuZGVyZXJzIChwcm9taXNlcylcbiAgICAvLyBpbiBhIGNlbnRyYWwgc3RvcmUuIFdoZW4gcmVDQVBUQ0hBIGlzIGxvYWRlZCwgbm90aWZ5IGFsbCBwcm9taXNlcyB0aGF0IGl0J3MgcmVhZHkuXG4gICAgaWYgKCF3aW5kb3cudHVybnN0aWxlUmVuZGVyZXJzKSB7XG4gICAgICAgIHdpbmRvdy50dXJuc3RpbGVSZW5kZXJlcnMgPSBbXTtcbiAgICB9XG5cbiAgICAvLyBTdG9yZSB0aGUgcHJvbWlzZSBpbiBvdXIgcmVuZGVyZXJzIHN0b3JlXG4gICAgd2luZG93LnR1cm5zdGlsZVJlbmRlcmVycy5wdXNoKGRlZmVycmVkKTtcblxuICAgIHJldHVybiB7XG4gICAgICAgIG5vdGlmeSgpIHtcbiAgICAgICAgICAgIC8vIEJlIHN1cmUgdG8gbm90aWZ5IGFsbCByZW5kZXJlcnMgdGhhdCByZUNBUFRDSEEgaXMgcmVhZHksIGFzIHNvb24gYXMgYXQgbGVhc3Qgb25lIGlzIHJlYWR5XG4gICAgICAgICAgICAvLyBBcyBpcyAtIGFzIHNvb24gYXMgYHdpbmRvdy50dXJuc3RpbGVgIGlzIGF2YWlsYWJsZS5cbiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwLCBsZW4gPSB3aW5kb3cudHVybnN0aWxlUmVuZGVyZXJzLmxlbmd0aDsgaSA8IGxlbjsgaSsrKSB7XG4gICAgICAgICAgICAgICAgd2luZG93LnR1cm5zdGlsZVJlbmRlcmVyc1tpXS5yZXNvbHZlKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG5cbiAgICAgICAgd2FpdCgpIHtcbiAgICAgICAgICAgIHJldHVybiBkZWZlcnJlZC5wcm9taXNlO1xuICAgICAgICB9LFxuXG4gICAgICAgIHJlbmRlcihlbGUsIG9wdGlvbnMsIGNiKSB7XG4gICAgICAgICAgICB0aGlzLndhaXQoKS50aGVuKCgpID0+IHtcbiAgICAgICAgICAgICAgICBjYih3aW5kb3cudHVybnN0aWxlLnJlbmRlcihlbGUsIG9wdGlvbnMpKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9LFxuXG4gICAgICAgIHJlc2V0KHdpZGdldElkKSB7XG4gICAgICAgICAgICBpZiAodHlwZW9mIHdpZGdldElkID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdGhpcy5hc3NlcnRMb2FkZWQoKTtcblxuICAgICAgICAgICAgdGhpcy53YWl0KCkudGhlbigoKSA9PiB7IHJldHVybiB3aW5kb3cudHVybnN0aWxlLnJlc2V0KHdpZGdldElkKTsgfSk7XG4gICAgICAgIH0sXG5cbiAgICAgICAgZXhlY3V0ZSh3aWRnZXRJZCkge1xuICAgICAgICAgICAgaWYgKHR5cGVvZiB3aWRnZXRJZCA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHRoaXMuYXNzZXJ0TG9hZGVkKCk7XG4gICAgICAgICAgICB0aGlzLndhaXQoKS50aGVuKCgpID0+IHsgcmV0dXJuIHdpbmRvdy50dXJuc3RpbGUuZXhlY3V0ZSh3aWRnZXRJZCk7IH0pO1xuICAgICAgICB9LFxuXG4gICAgICAgIGNoZWNrQ2FwdGNoYUxvYWQoKSB7XG4gICAgICAgICAgICBpZiAob3duUHJvcC5jYWxsKHdpbmRvdywgJ3R1cm5zdGlsZScpICYmIG93blByb3AuY2FsbCh3aW5kb3cudHVybnN0aWxlLCAncmVuZGVyJykpIHtcbiAgICAgICAgICAgICAgICB0aGlzLm5vdGlmeSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuXG4gICAgICAgIGFzc2VydExvYWRlZCgpIHtcbiAgICAgICAgICAgIGlmICghZGVmZXJyZWQucmVzb2x2ZWQoKSkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignVHVybnN0aWxlIGhhcyBub3QgYmVlbiBsb2FkZWQnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICB9O1xufVxuXG5leHBvcnQgY29uc3QgdHVybnN0aWxlID0gY3JlYXRlVHVybnN0aWxlKCk7XG5cbmlmICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJykge1xuICAgIHdpbmRvdy5mb3JtaWVUdXJuc3RpbGVPbkxvYWRDYWxsYmFjayA9IHR1cm5zdGlsZS5ub3RpZnk7XG59XG4iXSwibmFtZXMiOlsiZGVmZXIiLCJvd25Qcm9wIiwiT2JqZWN0IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjcmVhdGVUdXJuc3RpbGUiLCJkZWZlcnJlZCIsIndpbmRvdyIsInR1cm5zdGlsZVJlbmRlcmVycyIsInB1c2giLCJub3RpZnkiLCJpIiwibGVuIiwibGVuZ3RoIiwicmVzb2x2ZSIsIndhaXQiLCJwcm9taXNlIiwicmVuZGVyIiwiZWxlIiwib3B0aW9ucyIsImNiIiwidGhlbiIsInR1cm5zdGlsZSIsInJlc2V0Iiwid2lkZ2V0SWQiLCJhc3NlcnRMb2FkZWQiLCJleGVjdXRlIiwiY2hlY2tDYXB0Y2hhTG9hZCIsImNhbGwiLCJyZXNvbHZlZCIsIkVycm9yIiwiZm9ybWllVHVybnN0aWxlT25Mb2FkQ2FsbGJhY2siXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/js/captchas/inc/turnstile.js\n");

/***/ }),

/***/ "./src/js/captchas/turnstile.js":
/*!**************************************!*\
  !*** ./src/js/captchas/turnstile.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"FormieTurnstile\": () => (/* binding */ FormieTurnstile)\n/* harmony export */ });\n/* harmony import */ var _inc_turnstile__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./inc/turnstile */ \"./src/js/captchas/inc/turnstile.js\");\n/* harmony import */ var _utils_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/utils */ \"./src/js/utils/utils.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\n\n\nvar FormieTurnstile = /*#__PURE__*/function () {\n  function FormieTurnstile() {\n    var settings = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, FormieTurnstile);\n\n    this.$form = settings.$form;\n    this.form = this.$form.form;\n    this.siteKey = settings.siteKey;\n    this.loadingMethod = settings.loadingMethod;\n    this.turnstileScriptId = 'FORMIE_TURNSTILE_SCRIPT'; // Fetch and attach the script only once - this is in case there are multiple forms on the page.\n    // They all go to a single callback which resolves its loaded state\n\n    if (!document.getElementById(this.turnstileScriptId)) {\n      var $script = document.createElement('script');\n      $script.id = this.turnstileScriptId;\n      $script.src = 'https://challenges.cloudflare.com/turnstile/v0/api.js?onload=formieTurnstileOnLoadCallback&render=explicit';\n\n      if (this.loadingMethod === 'async' || this.loadingMethod === 'asyncDefer') {\n        $script.async = true;\n      }\n\n      if (this.loadingMethod === 'defer' || this.loadingMethod === 'asyncDefer') {\n        $script.defer = true;\n      }\n\n      document.body.appendChild($script);\n    } // Wait for/ensure turnstile script has been loaded\n\n\n    _inc_turnstile__WEBPACK_IMPORTED_MODULE_0__.turnstile.checkCaptchaLoad(); // We can have multiple captchas per form, so store them and render only when we need\n\n    this.$placeholders = this.$form.querySelectorAll('[data-turnstile-placeholder]');\n\n    if (!this.$placeholders) {\n      console.error('Unable to find any Turnstile placeholders for [data-turnstile-placeholder]');\n      return;\n    } // Render the captcha for just this page\n\n\n    this.renderCaptcha(); // Attach a custom event listener on the form\n\n    this.form.addEventListener(this.$form, (0,_utils_utils__WEBPACK_IMPORTED_MODULE_1__.eventKey)('onFormieCaptchaValidate', 'Turnstile'), this.onValidate.bind(this));\n    this.form.addEventListener(this.$form, (0,_utils_utils__WEBPACK_IMPORTED_MODULE_1__.eventKey)('onAfterFormieSubmit', 'Turnstile'), this.onAfterSubmit.bind(this));\n  }\n\n  _createClass(FormieTurnstile, [{\n    key: \"renderCaptcha\",\n    value: function renderCaptcha() {\n      var _this = this;\n\n      this.$placeholder = null; // Get the active page\n\n      var $currentPage = null; // Find the current page, from Formie's JS\n\n      if (this.$form.form.formTheme) {\n        // eslint-disable-next-line\n        $currentPage = this.$form.form.formTheme.$currentPage;\n      }\n\n      var hasMultiplePages = this.$form.form.settings.hasMultiplePages; // Get the current page's captcha - find the first placeholder that's non-invisible\n\n      this.$placeholders.forEach(function ($placeholder) {\n        if ($currentPage && $currentPage.contains($placeholder)) {\n          _this.$placeholder = $placeholder;\n        }\n      }); // If a single-page form, get the first placeholder\n\n      if (!hasMultiplePages && this.$placeholder === null) {\n        // eslint-disable-next-line\n        this.$placeholder = this.$placeholders[0];\n      }\n\n      if (this.$placeholder === null) {\n        // This is okay in some instances - notably for multi-page forms where the captcha\n        // should only be shown on the last step. But its nice to log this anyway.\n        if ($currentPage === null) {\n          console.log('Unable to find turnstile placeholder for [data-turnstile-placeholder]');\n        }\n\n        return;\n      } // Remove any existing token input\n\n\n      var $token = this.$form.querySelector('[name=\"cf-turnstile-response\"]');\n\n      if ($token) {\n        $token.remove();\n      } // Check if we actually need to re-render this, or just refresh it...\n\n\n      var currentTurnstileId = this.$placeholder.getAttribute('data-turnstile-id');\n\n      if (currentTurnstileId !== null) {\n        this.turnstileId = currentTurnstileId;\n        _inc_turnstile__WEBPACK_IMPORTED_MODULE_0__.turnstile.reset(this.turnstileId);\n      } // Render the turnstile\n\n\n      _inc_turnstile__WEBPACK_IMPORTED_MODULE_0__.turnstile.render(this.$placeholder, {\n        sitekey: this.siteKey,\n        callback: this.onVerify.bind(this),\n        'expired-callback': this.onExpired.bind(this),\n        'timeout-callback': this.onTimeout.bind(this),\n        'error-callback': this.onError.bind(this),\n        'close-callback': this.onClose.bind(this)\n      }, function (id) {\n        _this.turnstileId = id; // // Update the placeholder with our ID, in case we need to re-render it\n\n        _this.$placeholder.setAttribute('data-turnstile-id', id); // Add a `tabindex` attribute to the iframe to prevent tabbing-to\n\n\n        var iframe = _this.$placeholder.querySelector('iframe');\n\n        if (iframe) {\n          iframe.setAttribute('tabindex', '-1');\n        }\n      });\n    }\n  }, {\n    key: \"onValidate\",\n    value: function onValidate(e) {\n      // When not using Formie's theme JS, there's nothing preventing the form from submitting (the theme does).\n      // And when the form is submitting, we can't query DOM elements, so stop early so the normal checks work.\n      if (!this.$form.form.formTheme) {\n        e.preventDefault(); // Get the submit action from the form hidden input. This is normally taken care of by the theme\n\n        this.form.submitAction = this.$form.querySelector('[name=\"submitAction\"]').value || 'submit';\n      } // Don't validate if we're not submitting (going back, saving)\n\n\n      if (this.form.submitAction !== 'submit' || this.$placeholder === null) {\n        return;\n      } // Check if the form has an invalid flag set, don't bother going further\n\n\n      if (e.detail.invalid) {\n        return;\n      }\n\n      e.preventDefault(); // Save for later to trigger real submit\n\n      this.submitHandler = e.detail.submitHandler; // Trigger turnstile\n\n      _inc_turnstile__WEBPACK_IMPORTED_MODULE_0__.turnstile.execute(this.turnstileId);\n    }\n  }, {\n    key: \"onVerify\",\n    value: function onVerify(token) {\n      // Submit the form - we've hijacked it up until now\n      if (this.submitHandler) {\n        // Run the next submit action for the form. TODO: make this better!\n        if (this.submitHandler.validatePayment()) {\n          this.submitHandler.submitForm();\n        }\n      }\n    }\n  }, {\n    key: \"onAfterSubmit\",\n    value: function onAfterSubmit(e) {\n      var _this2 = this;\n\n      // For a multi-page form, we need to remove the current captcha, then render the next pages.\n      // For a single-page form, reset the Turnstile, in case we want to fill out the form again\n      // `renderCaptcha` will deal with both cases\n      setTimeout(function () {\n        _this2.renderCaptcha();\n      }, 300);\n    }\n  }, {\n    key: \"onExpired\",\n    value: function onExpired() {\n      console.log('Turnstile has expired - reloading.');\n      _inc_turnstile__WEBPACK_IMPORTED_MODULE_0__.turnstile.reset(this.turnstileId);\n    }\n  }, {\n    key: \"onTimeout\",\n    value: function onTimeout() {\n      console.log('Turnstile has expired challenge - reloading.');\n      _inc_turnstile__WEBPACK_IMPORTED_MODULE_0__.turnstile.reset(this.turnstileId);\n    }\n  }, {\n    key: \"onError\",\n    value: function onError(error) {\n      console.error('Turnstile was unable to load');\n    }\n  }, {\n    key: \"onClose\",\n    value: function onClose() {\n      if (this.$form.form.formTheme) {\n        this.$form.form.formTheme.removeLoading();\n      }\n    }\n  }]);\n\n  return FormieTurnstile;\n}();\nwindow.FormieTurnstile = FormieTurnstile;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/captchas/turnstile.js\n");

/***/ }),

/***/ "./src/js/utils/utils.js":
/*!*******************************!*\
  !*** ./src/js/utils/utils.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ensureVariable\": () => (/* binding */ ensureVariable),\n/* harmony export */   \"eventKey\": () => (/* binding */ eventKey),\n/* harmony export */   \"isEmpty\": () => (/* binding */ isEmpty),\n/* harmony export */   \"t\": () => (/* binding */ t),\n/* harmony export */   \"toBoolean\": () => (/* binding */ toBoolean)\n/* harmony export */ });\nvar isEmpty = function isEmpty(obj) {\n  return obj && Object.keys(obj).length === 0 && obj.constructor === Object;\n};\nvar toBoolean = function toBoolean(val) {\n  return !/^(?:f(?:alse)?|no?|0+)$/i.test(val) && !!val;\n};\nvar eventKey = function eventKey(eventName) {\n  var namespace = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n  if (!namespace) {\n    namespace = Math.random().toString(36).substr(2, 5);\n  }\n\n  return \"\".concat(eventName, \".\").concat(namespace);\n};\nvar t = function t(string) {\n  var replacements = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (window.FormieTranslations) {\n    string = window.FormieTranslations[string] || string;\n  }\n\n  return string.replace(/{([a-zA-Z0-9]+)}/g, function (match, p1) {\n    if (replacements[p1]) {\n      return replacements[p1];\n    }\n\n    return match;\n  });\n};\nvar ensureVariable = function ensureVariable(variable) {\n  var timeout = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100000;\n  var start = Date.now(); // Function to allow us to wait for a global variable to be available. Useful for third-party scripts.\n\n  var waitForVariable = function waitForVariable(resolve, reject) {\n    if (window[variable]) {\n      resolve(window[variable]);\n    } else if (timeout && Date.now() - start >= timeout) {\n      reject(new Error('timeout'));\n    } else {\n      setTimeout(waitForVariable.bind(this, resolve, reject), 30);\n    }\n  };\n\n  return new Promise(waitForVariable);\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvanMvdXRpbHMvdXRpbHMuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBTyxJQUFNQSxPQUFPLEdBQUcsU0FBVkEsT0FBVSxDQUFTQyxHQUFULEVBQWM7RUFDakMsT0FBT0EsR0FBRyxJQUFJQyxNQUFNLENBQUNDLElBQVAsQ0FBWUYsR0FBWixFQUFpQkcsTUFBakIsS0FBNEIsQ0FBbkMsSUFBd0NILEdBQUcsQ0FBQ0ksV0FBSixLQUFvQkgsTUFBbkU7QUFDSCxDQUZNO0FBSUEsSUFBTUksU0FBUyxHQUFHLFNBQVpBLFNBQVksQ0FBU0MsR0FBVCxFQUFjO0VBQ25DLE9BQU8sQ0FBQywyQkFBMkJDLElBQTNCLENBQWdDRCxHQUFoQyxDQUFELElBQXlDLENBQUMsQ0FBQ0EsR0FBbEQ7QUFDSCxDQUZNO0FBSUEsSUFBTUUsUUFBUSxHQUFHLFNBQVhBLFFBQVcsQ0FBU0MsU0FBVCxFQUFzQztFQUFBLElBQWxCQyxTQUFrQix1RUFBTixJQUFNOztFQUMxRCxJQUFJLENBQUNBLFNBQUwsRUFBZ0I7SUFDWkEsU0FBUyxHQUFHQyxJQUFJLENBQUNDLE1BQUwsR0FBY0MsUUFBZCxDQUF1QixFQUF2QixFQUEyQkMsTUFBM0IsQ0FBa0MsQ0FBbEMsRUFBcUMsQ0FBckMsQ0FBWjtFQUNIOztFQUVELGlCQUFVTCxTQUFWLGNBQXVCQyxTQUF2QjtBQUNILENBTk07QUFRQSxJQUFNSyxDQUFDLEdBQUcsU0FBSkEsQ0FBSSxDQUFTQyxNQUFULEVBQW9DO0VBQUEsSUFBbkJDLFlBQW1CLHVFQUFKLEVBQUk7O0VBQ2pELElBQUlDLE1BQU0sQ0FBQ0Msa0JBQVgsRUFBK0I7SUFDM0JILE1BQU0sR0FBR0UsTUFBTSxDQUFDQyxrQkFBUCxDQUEwQkgsTUFBMUIsS0FBcUNBLE1BQTlDO0VBQ0g7O0VBRUQsT0FBT0EsTUFBTSxDQUFDSSxPQUFQLENBQWUsbUJBQWYsRUFBb0MsVUFBQ0MsS0FBRCxFQUFRQyxFQUFSLEVBQWU7SUFDdEQsSUFBSUwsWUFBWSxDQUFDSyxFQUFELENBQWhCLEVBQXNCO01BQ2xCLE9BQU9MLFlBQVksQ0FBQ0ssRUFBRCxDQUFuQjtJQUNIOztJQUVELE9BQU9ELEtBQVA7RUFDSCxDQU5NLENBQVA7QUFPSCxDQVpNO0FBY0EsSUFBTUUsY0FBYyxHQUFHLFNBQWpCQSxjQUFpQixDQUFTQyxRQUFULEVBQXFDO0VBQUEsSUFBbEJDLE9BQWtCLHVFQUFSLE1BQVE7RUFDL0QsSUFBTUMsS0FBSyxHQUFHQyxJQUFJLENBQUNDLEdBQUwsRUFBZCxDQUQrRCxDQUcvRDs7RUFDQSxJQUFNQyxlQUFlLEdBQUcsU0FBbEJBLGVBQWtCLENBQVNDLE9BQVQsRUFBa0JDLE1BQWxCLEVBQTBCO0lBQzlDLElBQUliLE1BQU0sQ0FBQ00sUUFBRCxDQUFWLEVBQXNCO01BQ2xCTSxPQUFPLENBQUNaLE1BQU0sQ0FBQ00sUUFBRCxDQUFQLENBQVA7SUFDSCxDQUZELE1BRU8sSUFBSUMsT0FBTyxJQUFLRSxJQUFJLENBQUNDLEdBQUwsS0FBYUYsS0FBZCxJQUF3QkQsT0FBdkMsRUFBZ0Q7TUFDbkRNLE1BQU0sQ0FBQyxJQUFJQyxLQUFKLENBQVUsU0FBVixDQUFELENBQU47SUFDSCxDQUZNLE1BRUE7TUFDSEMsVUFBVSxDQUFDSixlQUFlLENBQUNLLElBQWhCLENBQXFCLElBQXJCLEVBQTJCSixPQUEzQixFQUFvQ0MsTUFBcEMsQ0FBRCxFQUE4QyxFQUE5QyxDQUFWO0lBQ0g7RUFDSixDQVJEOztFQVVBLE9BQU8sSUFBSUksT0FBSixDQUFZTixlQUFaLENBQVA7QUFDSCxDQWZNIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL2pzL3V0aWxzL3V0aWxzLmpzP2Q5ZWUiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IGlzRW1wdHkgPSBmdW5jdGlvbihvYmopIHtcbiAgICByZXR1cm4gb2JqICYmIE9iamVjdC5rZXlzKG9iaikubGVuZ3RoID09PSAwICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gT2JqZWN0O1xufTtcblxuZXhwb3J0IGNvbnN0IHRvQm9vbGVhbiA9IGZ1bmN0aW9uKHZhbCkge1xuICAgIHJldHVybiAhL14oPzpmKD86YWxzZSk/fG5vP3wwKykkL2kudGVzdCh2YWwpICYmICEhdmFsO1xufTtcblxuZXhwb3J0IGNvbnN0IGV2ZW50S2V5ID0gZnVuY3Rpb24oZXZlbnROYW1lLCBuYW1lc3BhY2UgPSBudWxsKSB7XG4gICAgaWYgKCFuYW1lc3BhY2UpIHtcbiAgICAgICAgbmFtZXNwYWNlID0gTWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc3Vic3RyKDIsIDUpO1xuICAgIH1cblxuICAgIHJldHVybiBgJHtldmVudE5hbWV9LiR7bmFtZXNwYWNlfWA7XG59O1xuXG5leHBvcnQgY29uc3QgdCA9IGZ1bmN0aW9uKHN0cmluZywgcmVwbGFjZW1lbnRzID0ge30pIHtcbiAgICBpZiAod2luZG93LkZvcm1pZVRyYW5zbGF0aW9ucykge1xuICAgICAgICBzdHJpbmcgPSB3aW5kb3cuRm9ybWllVHJhbnNsYXRpb25zW3N0cmluZ10gfHwgc3RyaW5nO1xuICAgIH1cblxuICAgIHJldHVybiBzdHJpbmcucmVwbGFjZSgveyhbYS16QS1aMC05XSspfS9nLCAobWF0Y2gsIHAxKSA9PiB7XG4gICAgICAgIGlmIChyZXBsYWNlbWVudHNbcDFdKSB7XG4gICAgICAgICAgICByZXR1cm4gcmVwbGFjZW1lbnRzW3AxXTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBtYXRjaDtcbiAgICB9KTtcbn07XG5cbmV4cG9ydCBjb25zdCBlbnN1cmVWYXJpYWJsZSA9IGZ1bmN0aW9uKHZhcmlhYmxlLCB0aW1lb3V0ID0gMTAwMDAwKSB7XG4gICAgY29uc3Qgc3RhcnQgPSBEYXRlLm5vdygpO1xuXG4gICAgLy8gRnVuY3Rpb24gdG8gYWxsb3cgdXMgdG8gd2FpdCBmb3IgYSBnbG9iYWwgdmFyaWFibGUgdG8gYmUgYXZhaWxhYmxlLiBVc2VmdWwgZm9yIHRoaXJkLXBhcnR5IHNjcmlwdHMuXG4gICAgY29uc3Qgd2FpdEZvclZhcmlhYmxlID0gZnVuY3Rpb24ocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICAgIGlmICh3aW5kb3dbdmFyaWFibGVdKSB7XG4gICAgICAgICAgICByZXNvbHZlKHdpbmRvd1t2YXJpYWJsZV0pO1xuICAgICAgICB9IGVsc2UgaWYgKHRpbWVvdXQgJiYgKERhdGUubm93KCkgLSBzdGFydCkgPj0gdGltZW91dCkge1xuICAgICAgICAgICAgcmVqZWN0KG5ldyBFcnJvcigndGltZW91dCcpKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHNldFRpbWVvdXQod2FpdEZvclZhcmlhYmxlLmJpbmQodGhpcywgcmVzb2x2ZSwgcmVqZWN0KSwgMzApO1xuICAgICAgICB9XG4gICAgfTtcblxuICAgIHJldHVybiBuZXcgUHJvbWlzZSh3YWl0Rm9yVmFyaWFibGUpO1xufTtcbiJdLCJuYW1lcyI6WyJpc0VtcHR5Iiwib2JqIiwiT2JqZWN0Iiwia2V5cyIsImxlbmd0aCIsImNvbnN0cnVjdG9yIiwidG9Cb29sZWFuIiwidmFsIiwidGVzdCIsImV2ZW50S2V5IiwiZXZlbnROYW1lIiwibmFtZXNwYWNlIiwiTWF0aCIsInJhbmRvbSIsInRvU3RyaW5nIiwic3Vic3RyIiwidCIsInN0cmluZyIsInJlcGxhY2VtZW50cyIsIndpbmRvdyIsIkZvcm1pZVRyYW5zbGF0aW9ucyIsInJlcGxhY2UiLCJtYXRjaCIsInAxIiwiZW5zdXJlVmFyaWFibGUiLCJ2YXJpYWJsZSIsInRpbWVvdXQiLCJzdGFydCIsIkRhdGUiLCJub3ciLCJ3YWl0Rm9yVmFyaWFibGUiLCJyZXNvbHZlIiwicmVqZWN0IiwiRXJyb3IiLCJzZXRUaW1lb3V0IiwiYmluZCIsIlByb21pc2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/js/utils/utils.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/js/captchas/turnstile.js");
/******/ 	
/******/ })()
;