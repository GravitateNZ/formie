/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/payments/payment-provider.js":
/*!*********************************************!*\
  !*** ./src/js/payments/payment-provider.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"FormiePaymentProvider\": () => (/* binding */ FormiePaymentProvider)\n/* harmony export */ });\n/* harmony import */ var _utils_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/utils */ \"./src/js/utils/utils.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\n\nvar FormiePaymentProvider = /*#__PURE__*/function () {\n  function FormiePaymentProvider() {\n    var _this = this;\n\n    var settings = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, FormiePaymentProvider);\n\n    this.initialized = false;\n    this.$form = settings.$form;\n    this.form = this.$form.form;\n    this.$field = settings.$field;\n    this.successClass = this.form.getClasses('success');\n    this.successMessageClass = this.form.getClasses('successMessage');\n    this.errorClass = this.form.getClasses('error');\n    this.errorMessageClass = this.form.getClasses('errorMessage');\n    this.isVisible = false; // Only initialize the field if it's visible. Use `IntersectionObserver` to check when visible\n    // and also when hidden (navigating to other pages) to destroy it.\n\n    var observer = new IntersectionObserver(function (entries) {\n      if (entries[0].intersectionRatio == 0) {\n        _this.isVisible = false; // Only call the events if ready\n\n        if (_this.initialized) {\n          _this.onHide();\n        }\n      } else {\n        _this.isVisible = true; // Only call the events if ready\n\n        if (_this.initialized) {\n          _this.onShow();\n        }\n      }\n    }, {\n      root: this.$form\n    }); // Watch for when the input is visible/hidden, in the context of the form. But wait a little to start watching\n    // to prevent double binding when still loading the form, or hidden behind conditions.\n\n    setTimeout(function () {\n      observer.observe(_this.$field);\n    }, 500);\n  }\n\n  _createClass(FormiePaymentProvider, [{\n    key: \"removeSuccess\",\n    value: function removeSuccess() {\n      this.$field.classList.remove(this.successClass);\n      var $success = this.$field.querySelector(\".\".concat(this.successMessageClass));\n\n      if ($success) {\n        $success.remove();\n      }\n    }\n  }, {\n    key: \"addSuccess\",\n    value: function addSuccess(message) {\n      this.$field.classList.add(this.successClass);\n      var $fieldContainer = this.$field.querySelector('[data-field-type] > div');\n\n      if (!$fieldContainer) {\n        return console.error('Unable to find `[data-field-type] > div` to add success message.');\n      }\n\n      var $success = document.createElement('div');\n      $success.className = this.successMessageClass;\n      $success.textContent = message;\n      $fieldContainer.appendChild($success);\n    }\n  }, {\n    key: \"removeError\",\n    value: function removeError() {\n      this.$field.classList.remove(this.errorClass);\n      var $error = this.$field.querySelector(\".\".concat(this.errorMessageClass));\n\n      if ($error) {\n        $error.remove();\n      }\n    }\n  }, {\n    key: \"addError\",\n    value: function addError(message) {\n      this.$field.classList.add(this.errorClass);\n      var $fieldContainer = this.$field.querySelector('[data-field-type] > div');\n\n      if (!$fieldContainer) {\n        return console.error('Unable to find `[data-field-type] > div` to add error message.');\n      }\n\n      var $error = document.createElement('div');\n      $error.className = this.errorMessageClass;\n      $error.textContent = message;\n      $fieldContainer.appendChild($error);\n\n      if (this.submitHandler) {\n        this.submitHandler.formSubmitError();\n      }\n    }\n  }, {\n    key: \"updateInputs\",\n    value: function updateInputs(name, value) {\n      var $input = this.$field.querySelector(\"[name*=\\\"\".concat(name, \"\\\"]\"));\n\n      if ($input) {\n        $input.value = value;\n      }\n    }\n  }, {\n    key: \"getBillingData\",\n    value: function getBillingData() {\n      if (!this.billingDetails) {\n        return {};\n      }\n\n      var billing = {};\n\n      if (this.billingDetails.billingName) {\n        var billingName = this.getFieldValue(this.billingDetails.billingName);\n\n        if (billingName) {\n          billing.name = billingName;\n        }\n      }\n\n      if (this.billingDetails.billingEmail) {\n        var billingEmail = this.getFieldValue(this.billingDetails.billingEmail);\n\n        if (billingEmail) {\n          billing.email = billingEmail;\n        }\n      }\n\n      if (this.billingDetails.billingAddress) {\n        billing.address = {};\n        var address1 = this.getFieldValue(\"\".concat(this.billingDetails.billingAddress, \"[address1]\"));\n        var address2 = this.getFieldValue(\"\".concat(this.billingDetails.billingAddress, \"[address2]\"));\n        var address3 = this.getFieldValue(\"\".concat(this.billingDetails.billingAddress, \"[address3]\"));\n        var city = this.getFieldValue(\"\".concat(this.billingDetails.billingAddress, \"[city]\"));\n        var zip = this.getFieldValue(\"\".concat(this.billingDetails.billingAddress, \"[zip]\"));\n        var state = this.getFieldValue(\"\".concat(this.billingDetails.billingAddress, \"[state]\"));\n        var country = this.getFieldValue(\"\".concat(this.billingDetails.billingAddress, \"[country]\"));\n        /* eslint-disable camelcase */\n\n        if (address1) {\n          billing.address.line1 = address1;\n        }\n\n        if (address2) {\n          billing.address.line2 = address2;\n        }\n\n        if (address3) {\n          billing.address.line3 = address3;\n        }\n\n        if (city) {\n          billing.address.city = city;\n        }\n\n        if (zip) {\n          billing.address.postal_code = zip;\n        }\n\n        if (state) {\n          billing.address.state = state;\n        }\n\n        if (country) {\n          billing.address.country = country;\n        }\n        /* eslint-enable camelcase */\n\n      } // Emit an \"modifyBillingDetails\" event. This can directly modify the `billing` param\n\n\n      var modifyBillingDetailsEvent = new CustomEvent('modifyBillingDetails', {\n        bubbles: true,\n        detail: {\n          provider: this,\n          billing: billing\n        }\n      }); // eslint-disable-next-line camelcase\n\n      return {\n        billing_details: billing\n      };\n    }\n  }, {\n    key: \"getFieldValue\",\n    value: function getFieldValue(handle) {\n      var value = '';\n      handle = this.getFieldName(handle); // We'll always get back multiple inputs to normalise checkbox/radios\n\n      var $fields = this.getFormField(handle);\n\n      if ($fields) {\n        $fields.forEach(function ($field) {\n          if ($field.type === 'checkbox' || $field.type === 'radio') {\n            if ($field.checked) {\n              return value = $field.value;\n            }\n          } else {\n            return value = $field.value;\n          }\n        });\n      }\n\n      return value;\n    }\n  }, {\n    key: \"getFormField\",\n    value: function getFormField(handle) {\n      // Get the field(s) we're targeting to watch for changes. Note we need to handle multiple fields (checkboxes)\n      var $fields = this.$form.querySelectorAll(\"[name=\\\"\".concat(handle, \"\\\"]\")); // Check if we're dealing with multiple fields, like checkboxes. This overrides the above\n\n      var $multiFields = this.$form.querySelectorAll(\"[name=\\\"\".concat(handle, \"[]\\\"]\"));\n\n      if ($multiFields.length) {\n        $fields = $multiFields;\n      }\n\n      return $fields;\n    }\n  }, {\n    key: \"getFieldName\",\n    value: function getFieldName(handle) {\n      // Normalise the handle first\n      handle = handle.replace('{', '').replace('}', '').replace(']', '').split('[').join('][');\n      return \"fields[\".concat(handle, \"]\");\n    }\n  }, {\n    key: \"onShow\",\n    value: function onShow() {}\n  }, {\n    key: \"onHide\",\n    value: function onHide() {}\n  }]);\n\n  return FormiePaymentProvider;\n}();\nwindow.FormiePaymentProvider = FormiePaymentProvider;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFnRSxHQUFoRSxFQUFxRUMsSUFBckUsQ0FBMEUsSUFBMUUsQ0FBVDtNQUVBLHdCQUFpQlosTUFBakI7SUFDSDtFQS9OTDtJQUFBO0lBQUEsT0FpT0ksa0JBQVMsQ0FFUjtFQW5PTDtJQUFBO0lBQUEsT0FxT0ksa0JBQVMsQ0FFUjtFQXZPTDs7RUFBQTtBQUFBO0FBME9BYSxNQUFNLENBQUMvRSxxQkFBUCxHQUErQkEscUJBQS9CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL2pzL3BheW1lbnRzL3BheW1lbnQtcHJvdmlkZXIuanM/YjVmMSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB0LCBldmVudEtleSB9IGZyb20gJy4uL3V0aWxzL3V0aWxzJztcblxuZXhwb3J0IGNsYXNzIEZvcm1pZVBheW1lbnRQcm92aWRlciB7XG4gICAgY29uc3RydWN0b3Ioc2V0dGluZ3MgPSB7fSkge1xuICAgICAgICB0aGlzLmluaXRpYWxpemVkID0gZmFsc2U7XG4gICAgICAgIHRoaXMuJGZvcm0gPSBzZXR0aW5ncy4kZm9ybTtcbiAgICAgICAgdGhpcy5mb3JtID0gdGhpcy4kZm9ybS5mb3JtO1xuICAgICAgICB0aGlzLiRmaWVsZCA9IHNldHRpbmdzLiRmaWVsZDtcbiAgICAgICAgdGhpcy5zdWNjZXNzQ2xhc3MgPSB0aGlzLmZvcm0uZ2V0Q2xhc3Nlcygnc3VjY2VzcycpO1xuICAgICAgICB0aGlzLnN1Y2Nlc3NNZXNzYWdlQ2xhc3MgPSB0aGlzLmZvcm0uZ2V0Q2xhc3Nlcygnc3VjY2Vzc01lc3NhZ2UnKTtcbiAgICAgICAgdGhpcy5lcnJvckNsYXNzID0gdGhpcy5mb3JtLmdldENsYXNzZXMoJ2Vycm9yJyk7XG4gICAgICAgIHRoaXMuZXJyb3JNZXNzYWdlQ2xhc3MgPSB0aGlzLmZvcm0uZ2V0Q2xhc3NlcygnZXJyb3JNZXNzYWdlJyk7XG4gICAgICAgIHRoaXMuaXNWaXNpYmxlID0gZmFsc2U7XG5cbiAgICAgICAgLy8gT25seSBpbml0aWFsaXplIHRoZSBmaWVsZCBpZiBpdCdzIHZpc2libGUuIFVzZSBgSW50ZXJzZWN0aW9uT2JzZXJ2ZXJgIHRvIGNoZWNrIHdoZW4gdmlzaWJsZVxuICAgICAgICAvLyBhbmQgYWxzbyB3aGVuIGhpZGRlbiAobmF2aWdhdGluZyB0byBvdGhlciBwYWdlcykgdG8gZGVzdHJveSBpdC5cbiAgICAgICAgY29uc3Qgb2JzZXJ2ZXIgPSBuZXcgSW50ZXJzZWN0aW9uT2JzZXJ2ZXIoKGVudHJpZXMpID0+IHtcbiAgICAgICAgICAgIGlmIChlbnRyaWVzWzBdLmludGVyc2VjdGlvblJhdGlvID09IDApIHtcbiAgICAgICAgICAgICAgICB0aGlzLmlzVmlzaWJsZSA9IGZhbHNlO1xuXG4gICAgICAgICAgICAgICAgLy8gT25seSBjYWxsIHRoZSBldmVudHMgaWYgcmVhZHlcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5pbml0aWFsaXplZCkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLm9uSGlkZSgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgdGhpcy5pc1Zpc2libGUgPSB0cnVlO1xuXG4gICAgICAgICAgICAgICAgLy8gT25seSBjYWxsIHRoZSBldmVudHMgaWYgcmVhZHlcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5pbml0aWFsaXplZCkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLm9uU2hvdygpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSwgeyByb290OiB0aGlzLiRmb3JtIH0pO1xuXG4gICAgICAgIC8vIFdhdGNoIGZvciB3aGVuIHRoZSBpbnB1dCBpcyB2aXNpYmxlL2hpZGRlbiwgaW4gdGhlIGNvbnRleHQgb2YgdGhlIGZvcm0uIEJ1dCB3YWl0IGEgbGl0dGxlIHRvIHN0YXJ0IHdhdGNoaW5nXG4gICAgICAgIC8vIHRvIHByZXZlbnQgZG91YmxlIGJpbmRpbmcgd2hlbiBzdGlsbCBsb2FkaW5nIHRoZSBmb3JtLCBvciBoaWRkZW4gYmVoaW5kIGNvbmRpdGlvbnMuXG4gICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgb2JzZXJ2ZXIub2JzZXJ2ZSh0aGlzLiRmaWVsZCk7XG4gICAgICAgIH0sIDUwMCk7XG4gICAgfVxuXG4gICAgcmVtb3ZlU3VjY2VzcygpIHtcbiAgICAgICAgdGhpcy4kZmllbGQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLnN1Y2Nlc3NDbGFzcyk7XG5cbiAgICAgICAgY29uc3QgJHN1Y2Nlc3MgPSB0aGlzLiRmaWVsZC5xdWVyeVNlbGVjdG9yKGAuJHt0aGlzLnN1Y2Nlc3NNZXNzYWdlQ2xhc3N9YCk7XG5cbiAgICAgICAgaWYgKCRzdWNjZXNzKSB7XG4gICAgICAgICAgICAkc3VjY2Vzcy5yZW1vdmUoKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGFkZFN1Y2Nlc3MobWVzc2FnZSkge1xuICAgICAgICB0aGlzLiRmaWVsZC5jbGFzc0xpc3QuYWRkKHRoaXMuc3VjY2Vzc0NsYXNzKTtcblxuICAgICAgICBjb25zdCAkZmllbGRDb250YWluZXIgPSB0aGlzLiRmaWVsZC5xdWVyeVNlbGVjdG9yKCdbZGF0YS1maWVsZC10eXBlXSA+IGRpdicpO1xuXG4gICAgICAgIGlmICghJGZpZWxkQ29udGFpbmVyKSB7XG4gICAgICAgICAgICByZXR1cm4gY29uc29sZS5lcnJvcignVW5hYmxlIHRvIGZpbmQgYFtkYXRhLWZpZWxkLXR5cGVdID4gZGl2YCB0byBhZGQgc3VjY2VzcyBtZXNzYWdlLicpO1xuICAgICAgICB9XG5cbiAgICAgICAgY29uc3QgJHN1Y2Nlc3MgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgJHN1Y2Nlc3MuY2xhc3NOYW1lID0gdGhpcy5zdWNjZXNzTWVzc2FnZUNsYXNzO1xuICAgICAgICAkc3VjY2Vzcy50ZXh0Q29udGVudCA9IG1lc3NhZ2U7XG5cbiAgICAgICAgJGZpZWxkQ29udGFpbmVyLmFwcGVuZENoaWxkKCRzdWNjZXNzKTtcbiAgICB9XG5cbiAgICByZW1vdmVFcnJvcigpIHtcbiAgICAgICAgdGhpcy4kZmllbGQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLmVycm9yQ2xhc3MpO1xuXG4gICAgICAgIGNvbnN0ICRlcnJvciA9IHRoaXMuJGZpZWxkLnF1ZXJ5U2VsZWN0b3IoYC4ke3RoaXMuZXJyb3JNZXNzYWdlQ2xhc3N9YCk7XG5cbiAgICAgICAgaWYgKCRlcnJvcikge1xuICAgICAgICAgICAgJGVycm9yLnJlbW92ZSgpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgYWRkRXJyb3IobWVzc2FnZSkge1xuICAgICAgICB0aGlzLiRmaWVsZC5jbGFzc0xpc3QuYWRkKHRoaXMuZXJyb3JDbGFzcyk7XG5cbiAgICAgICAgY29uc3QgJGZpZWxkQ29udGFpbmVyID0gdGhpcy4kZmllbGQucXVlcnlTZWxlY3RvcignW2RhdGEtZmllbGQtdHlwZV0gPiBkaXYnKTtcblxuICAgICAgICBpZiAoISRmaWVsZENvbnRhaW5lcikge1xuICAgICAgICAgICAgcmV0dXJuIGNvbnNvbGUuZXJyb3IoJ1VuYWJsZSB0byBmaW5kIGBbZGF0YS1maWVsZC10eXBlXSA+IGRpdmAgdG8gYWRkIGVycm9yIG1lc3NhZ2UuJyk7XG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCAkZXJyb3IgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgJGVycm9yLmNsYXNzTmFtZSA9IHRoaXMuZXJyb3JNZXNzYWdlQ2xhc3M7XG4gICAgICAgICRlcnJvci50ZXh0Q29udGVudCA9IG1lc3NhZ2U7XG5cbiAgICAgICAgJGZpZWxkQ29udGFpbmVyLmFwcGVuZENoaWxkKCRlcnJvcik7XG5cbiAgICAgICAgaWYgKHRoaXMuc3VibWl0SGFuZGxlcikge1xuICAgICAgICAgICAgdGhpcy5zdWJtaXRIYW5kbGVyLmZvcm1TdWJtaXRFcnJvcigpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgdXBkYXRlSW5wdXRzKG5hbWUsIHZhbHVlKSB7XG4gICAgICAgIGNvbnN0ICRpbnB1dCA9IHRoaXMuJGZpZWxkLnF1ZXJ5U2VsZWN0b3IoYFtuYW1lKj1cIiR7bmFtZX1cIl1gKTtcblxuICAgICAgICBpZiAoJGlucHV0KSB7XG4gICAgICAgICAgICAkaW5wdXQudmFsdWUgPSB2YWx1ZTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGdldEJpbGxpbmdEYXRhKCkge1xuICAgICAgICBpZiAoIXRoaXMuYmlsbGluZ0RldGFpbHMpIHtcbiAgICAgICAgICAgIHJldHVybiB7fTtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IGJpbGxpbmcgPSB7fTtcblxuICAgICAgICBpZiAodGhpcy5iaWxsaW5nRGV0YWlscy5iaWxsaW5nTmFtZSkge1xuICAgICAgICAgICAgY29uc3QgYmlsbGluZ05hbWUgPSB0aGlzLmdldEZpZWxkVmFsdWUodGhpcy5iaWxsaW5nRGV0YWlscy5iaWxsaW5nTmFtZSk7XG5cbiAgICAgICAgICAgIGlmIChiaWxsaW5nTmFtZSkge1xuICAgICAgICAgICAgICAgIGJpbGxpbmcubmFtZSA9IGJpbGxpbmdOYW1lO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHRoaXMuYmlsbGluZ0RldGFpbHMuYmlsbGluZ0VtYWlsKSB7XG4gICAgICAgICAgICBjb25zdCBiaWxsaW5nRW1haWwgPSB0aGlzLmdldEZpZWxkVmFsdWUodGhpcy5iaWxsaW5nRGV0YWlscy5iaWxsaW5nRW1haWwpO1xuXG4gICAgICAgICAgICBpZiAoYmlsbGluZ0VtYWlsKSB7XG4gICAgICAgICAgICAgICAgYmlsbGluZy5lbWFpbCA9IGJpbGxpbmdFbWFpbDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGlmICh0aGlzLmJpbGxpbmdEZXRhaWxzLmJpbGxpbmdBZGRyZXNzKSB7XG4gICAgICAgICAgICBiaWxsaW5nLmFkZHJlc3MgPSB7fTtcblxuICAgICAgICAgICAgY29uc3QgYWRkcmVzczEgPSB0aGlzLmdldEZpZWxkVmFsdWUoYCR7dGhpcy5iaWxsaW5nRGV0YWlscy5iaWxsaW5nQWRkcmVzc31bYWRkcmVzczFdYCk7XG4gICAgICAgICAgICBjb25zdCBhZGRyZXNzMiA9IHRoaXMuZ2V0RmllbGRWYWx1ZShgJHt0aGlzLmJpbGxpbmdEZXRhaWxzLmJpbGxpbmdBZGRyZXNzfVthZGRyZXNzMl1gKTtcbiAgICAgICAgICAgIGNvbnN0IGFkZHJlc3MzID0gdGhpcy5nZXRGaWVsZFZhbHVlKGAke3RoaXMuYmlsbGluZ0RldGFpbHMuYmlsbGluZ0FkZHJlc3N9W2FkZHJlc3MzXWApO1xuICAgICAgICAgICAgY29uc3QgY2l0eSA9IHRoaXMuZ2V0RmllbGRWYWx1ZShgJHt0aGlzLmJpbGxpbmdEZXRhaWxzLmJpbGxpbmdBZGRyZXNzfVtjaXR5XWApO1xuICAgICAgICAgICAgY29uc3QgemlwID0gdGhpcy5nZXRGaWVsZFZhbHVlKGAke3RoaXMuYmlsbGluZ0RldGFpbHMuYmlsbGluZ0FkZHJlc3N9W3ppcF1gKTtcbiAgICAgICAgICAgIGNvbnN0IHN0YXRlID0gdGhpcy5nZXRGaWVsZFZhbHVlKGAke3RoaXMuYmlsbGluZ0RldGFpbHMuYmlsbGluZ0FkZHJlc3N9W3N0YXRlXWApO1xuICAgICAgICAgICAgY29uc3QgY291bnRyeSA9IHRoaXMuZ2V0RmllbGRWYWx1ZShgJHt0aGlzLmJpbGxpbmdEZXRhaWxzLmJpbGxpbmdBZGRyZXNzfVtjb3VudHJ5XWApO1xuXG4gICAgICAgICAgICAvKiBlc2xpbnQtZGlzYWJsZSBjYW1lbGNhc2UgKi9cbiAgICAgICAgICAgIGlmIChhZGRyZXNzMSkge1xuICAgICAgICAgICAgICAgIGJpbGxpbmcuYWRkcmVzcy5saW5lMSA9IGFkZHJlc3MxO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAoYWRkcmVzczIpIHtcbiAgICAgICAgICAgICAgICBiaWxsaW5nLmFkZHJlc3MubGluZTIgPSBhZGRyZXNzMjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKGFkZHJlc3MzKSB7XG4gICAgICAgICAgICAgICAgYmlsbGluZy5hZGRyZXNzLmxpbmUzID0gYWRkcmVzczM7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChjaXR5KSB7XG4gICAgICAgICAgICAgICAgYmlsbGluZy5hZGRyZXNzLmNpdHkgPSBjaXR5O1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAoemlwKSB7XG4gICAgICAgICAgICAgICAgYmlsbGluZy5hZGRyZXNzLnBvc3RhbF9jb2RlID0gemlwO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAoc3RhdGUpIHtcbiAgICAgICAgICAgICAgICBiaWxsaW5nLmFkZHJlc3Muc3RhdGUgPSBzdGF0ZTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKGNvdW50cnkpIHtcbiAgICAgICAgICAgICAgICBiaWxsaW5nLmFkZHJlc3MuY291bnRyeSA9IGNvdW50cnk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvKiBlc2xpbnQtZW5hYmxlIGNhbWVsY2FzZSAqL1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gRW1pdCBhbiBcIm1vZGlmeUJpbGxpbmdEZXRhaWxzXCIgZXZlbnQuIFRoaXMgY2FuIGRpcmVjdGx5IG1vZGlmeSB0aGUgYGJpbGxpbmdgIHBhcmFtXG4gICAgICAgIGNvbnN0IG1vZGlmeUJpbGxpbmdEZXRhaWxzRXZlbnQgPSBuZXcgQ3VzdG9tRXZlbnQoJ21vZGlmeUJpbGxpbmdEZXRhaWxzJywge1xuICAgICAgICAgICAgYnViYmxlczogdHJ1ZSxcbiAgICAgICAgICAgIGRldGFpbDoge1xuICAgICAgICAgICAgICAgIHByb3ZpZGVyOiB0aGlzLFxuICAgICAgICAgICAgICAgIGJpbGxpbmcsXG4gICAgICAgICAgICB9LFxuICAgICAgICB9KTtcblxuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgY2FtZWxjYXNlXG4gICAgICAgIHJldHVybiB7IGJpbGxpbmdfZGV0YWlsczogYmlsbGluZyB9O1xuICAgIH1cblxuICAgIGdldEZpZWxkVmFsdWUoaGFuZGxlKSB7XG4gICAgICAgIGxldCB2YWx1ZSA9ICcnO1xuXG4gICAgICAgIGhhbmRsZSA9IHRoaXMuZ2V0RmllbGROYW1lKGhhbmRsZSk7XG5cbiAgICAgICAgLy8gV2UnbGwgYWx3YXlzIGdldCBiYWNrIG11bHRpcGxlIGlucHV0cyB0byBub3JtYWxpc2UgY2hlY2tib3gvcmFkaW9zXG4gICAgICAgIGNvbnN0ICRmaWVsZHMgPSB0aGlzLmdldEZvcm1GaWVsZChoYW5kbGUpO1xuXG4gICAgICAgIGlmICgkZmllbGRzKSB7XG4gICAgICAgICAgICAkZmllbGRzLmZvckVhY2goKCRmaWVsZCkgPT4ge1xuICAgICAgICAgICAgICAgIGlmICgkZmllbGQudHlwZSA9PT0gJ2NoZWNrYm94JyB8fCAkZmllbGQudHlwZSA9PT0gJ3JhZGlvJykge1xuICAgICAgICAgICAgICAgICAgICBpZiAoJGZpZWxkLmNoZWNrZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB2YWx1ZSA9ICRmaWVsZC52YWx1ZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB2YWx1ZSA9ICRmaWVsZC52YWx1ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9XG5cbiAgICBnZXRGb3JtRmllbGQoaGFuZGxlKSB7XG4gICAgICAgIC8vIEdldCB0aGUgZmllbGQocykgd2UncmUgdGFyZ2V0aW5nIHRvIHdhdGNoIGZvciBjaGFuZ2VzLiBOb3RlIHdlIG5lZWQgdG8gaGFuZGxlIG11bHRpcGxlIGZpZWxkcyAoY2hlY2tib3hlcylcbiAgICAgICAgbGV0ICRmaWVsZHMgPSB0aGlzLiRmb3JtLnF1ZXJ5U2VsZWN0b3JBbGwoYFtuYW1lPVwiJHtoYW5kbGV9XCJdYCk7XG5cbiAgICAgICAgLy8gQ2hlY2sgaWYgd2UncmUgZGVhbGluZyB3aXRoIG11bHRpcGxlIGZpZWxkcywgbGlrZSBjaGVja2JveGVzLiBUaGlzIG92ZXJyaWRlcyB0aGUgYWJvdmVcbiAgICAgICAgY29uc3QgJG11bHRpRmllbGRzID0gdGhpcy4kZm9ybS5xdWVyeVNlbGVjdG9yQWxsKGBbbmFtZT1cIiR7aGFuZGxlfVtdXCJdYCk7XG5cbiAgICAgICAgaWYgKCRtdWx0aUZpZWxkcy5sZW5ndGgpIHtcbiAgICAgICAgICAgICRmaWVsZHMgPSAkbXVsdGlGaWVsZHM7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gJGZpZWxkcztcbiAgICB9XG5cbiAgICBnZXRGaWVsZE5hbWUoaGFuZGxlKSB7XG4gICAgICAgIC8vIE5vcm1hbGlzZSB0aGUgaGFuZGxlIGZpcnN0XG4gICAgICAgIGhhbmRsZSA9IGhhbmRsZS5yZXBsYWNlKCd7JywgJycpLnJlcGxhY2UoJ30nLCAnJykucmVwbGFjZSgnXScsICcnKS5zcGxpdCgnWycpLmpvaW4oJ11bJyk7XG5cbiAgICAgICAgcmV0dXJuIGBmaWVsZHNbJHtoYW5kbGV9XWA7XG4gICAgfVxuXG4gICAgb25TaG93KCkge1xuXG4gICAgfVxuXG4gICAgb25IaWRlKCkge1xuXG4gICAgfVxufVxuXG53aW5kb3cuRm9ybWllUGF5bWVudFByb3ZpZGVyID0gRm9ybWllUGF5bWVudFByb3ZpZGVyO1xuIl0sIm5hbWVzIjpbInQiLCJldmVudEtleSIsIkZvcm1pZVBheW1lbnRQcm92aWRlciIsInNldHRpbmdzIiwiaW5pdGlhbGl6ZWQiLCIkZm9ybSIsImZvcm0iLCIkZmllbGQiLCJzdWNjZXNzQ2xhc3MiLCJnZXRDbGFzc2VzIiwic3VjY2Vzc01lc3NhZ2VDbGFzcyIsImVycm9yQ2xhc3MiLCJlcnJvck1lc3NhZ2VDbGFzcyIsImlzVmlzaWJsZSIsIm9ic2VydmVyIiwiSW50ZXJzZWN0aW9uT2JzZXJ2ZXIiLCJlbnRyaWVzIiwiaW50ZXJzZWN0aW9uUmF0aW8iLCJvbkhpZGUiLCJvblNob3ciLCJyb290Iiwic2V0VGltZW91dCIsIm9ic2VydmUiLCJjbGFzc0xpc3QiLCJyZW1vdmUiLCIkc3VjY2VzcyIsInF1ZXJ5U2VsZWN0b3IiLCJtZXNzYWdlIiwiYWRkIiwiJGZpZWxkQ29udGFpbmVyIiwiY29uc29sZSIsImVycm9yIiwiZG9jdW1lbnQiLCJjcmVhdGVFbGVtZW50IiwiY2xhc3NOYW1lIiwidGV4dENvbnRlbnQiLCJhcHBlbmRDaGlsZCIsIiRlcnJvciIsInN1Ym1pdEhhbmRsZXIiLCJmb3JtU3VibWl0RXJyb3IiLCJuYW1lIiwidmFsdWUiLCIkaW5wdXQiLCJiaWxsaW5nRGV0YWlscyIsImJpbGxpbmciLCJiaWxsaW5nTmFtZSIsImdldEZpZWxkVmFsdWUiLCJiaWxsaW5nRW1haWwiLCJlbWFpbCIsImJpbGxpbmdBZGRyZXNzIiwiYWRkcmVzcyIsImFkZHJlc3MxIiwiYWRkcmVzczIiLCJhZGRyZXNzMyIsImNpdHkiLCJ6aXAiLCJzdGF0ZSIsImNvdW50cnkiLCJsaW5lMSIsImxpbmUyIiwibGluZTMiLCJwb3N0YWxfY29kZSIsIm1vZGlmeUJpbGxpbmdEZXRhaWxzRXZlbnQiLCJDdXN0b21FdmVudCIsImJ1YmJsZXMiLCJkZXRhaWwiLCJwcm92aWRlciIsImJpbGxpbmdfZGV0YWlscyIsImhhbmRsZSIsImdldEZpZWxkTmFtZSIsIiRmaWVsZHMiLCJnZXRGb3JtRmllbGQiLCJmb3JFYWNoIiwidHlwZSIsImNoZWNrZWQiLCJxdWVyeVNlbGVjdG9yQWxsIiwiJG11bHRpRmllbGRzIiwibGVuZ3RoIiwicmVwbGFjZSIsInNwbGl0Iiwiam9pbiIsIndpbmRvdyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/js/payments/payment-provider.js\n");

/***/ }),

/***/ "./src/js/payments/paypal.js":
/*!***********************************!*\
  !*** ./src/js/payments/paypal.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"FormiePayPal\": () => (/* binding */ FormiePayPal)\n/* harmony export */ });\n/* harmony import */ var _utils_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/utils */ \"./src/js/utils/utils.js\");\n/* harmony import */ var _payment_provider__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./payment-provider */ \"./src/js/payments/payment-provider.js\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n\n\nvar FormiePayPal = /*#__PURE__*/function (_FormiePaymentProvide) {\n  _inherits(FormiePayPal, _FormiePaymentProvide);\n\n  var _super = _createSuper(FormiePayPal);\n\n  function FormiePayPal() {\n    var _this;\n\n    var settings = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, FormiePayPal);\n\n    _this = _super.call(this, settings);\n    _this.$form = settings.$form;\n    _this.form = _this.$form.form;\n    _this.$field = settings.$field;\n    _this.$input = _this.$field.querySelector('[data-fui-paypal-button]');\n\n    if (!_this.$input) {\n      console.error('Unable to find PayPal placeholder for [data-fui-paypal-button]');\n      return _possibleConstructorReturn(_this);\n    }\n\n    _this.clientId = settings.clientId;\n    _this.useSandbox = settings.useSandbox;\n    _this.currency = settings.currency;\n    _this.amountType = settings.amountType;\n    _this.amountFixed = settings.amountFixed;\n    _this.amountVariable = settings.amountVariable;\n    _this.buttonLayout = settings.buttonLayout;\n    _this.buttonColor = settings.buttonColor;\n    _this.buttonShape = settings.buttonShape;\n    _this.buttonLabel = settings.buttonLabel;\n    _this.buttonTagline = settings.buttonTagline;\n    _this.buttonWidth = settings.buttonWidth;\n    _this.buttonHeight = settings.buttonHeight;\n    _this.paypalScriptId = 'FORMIE_PAYPAL_SCRIPT';\n\n    if (!_this.clientId) {\n      console.error('Missing clientId for PayPal.');\n      return _possibleConstructorReturn(_this);\n    } // We can start listening for the field to become visible to initialize it\n\n\n    _this.initialized = true;\n    return _this;\n  }\n\n  _createClass(FormiePayPal, [{\n    key: \"onShow\",\n    value: function onShow() {\n      // Initialize the field only when it's visible\n      this.initField();\n    }\n  }, {\n    key: \"onHide\",\n    value: function onHide() {\n      // Field is hidden, so reset everything\n      this.onAfterSubmit(); // Remove unique event listeners\n\n      this.form.removeEventListener((0,_utils_utils__WEBPACK_IMPORTED_MODULE_0__.eventKey)('onAfterFormieSubmit', 'paypal'));\n    }\n  }, {\n    key: \"getScriptUrl\",\n    value: function getScriptUrl() {\n      var url = 'https://www.paypal.com/sdk/js';\n      var params = ['intent=authorize'];\n      params.push(\"currency=\".concat(this.currency));\n      params.push(\"client-id=\".concat(this.clientId));\n      return \"\".concat(url, \"?\").concat(params.join('&'));\n    }\n  }, {\n    key: \"initField\",\n    value: function initField() {\n      var _this2 = this;\n\n      // Fetch and attach the script only once - this is in case there are multiple forms on the page.\n      // They all go to a single callback which resolves its loaded state\n      if (!document.getElementById(this.paypalScriptId)) {\n        var $script = document.createElement('script');\n        $script.id = this.paypalScriptId;\n        $script.src = this.getScriptUrl();\n        $script.async = true;\n        $script.defer = true; // Wait until PayPal.js has loaded, then initialize\n\n        $script.onload = function () {\n          _this2.renderButton();\n        };\n\n        document.body.appendChild($script);\n      } else {\n        // Ensure that PayPal has been loaded and ready to use\n        (0,_utils_utils__WEBPACK_IMPORTED_MODULE_0__.ensureVariable)('paypal').then(function () {\n          _this2.renderButton();\n        });\n      } // Attach custom event listeners on the form\n\n\n      this.form.addEventListener(this.$form, (0,_utils_utils__WEBPACK_IMPORTED_MODULE_0__.eventKey)('onAfterFormieSubmit', 'paypal'), this.onAfterSubmit.bind(this));\n    }\n  }, {\n    key: \"getStyleSettings\",\n    value: function getStyleSettings() {\n      var settings = {\n        layout: this.buttonLayout,\n        color: this.buttonColor,\n        shape: this.buttonShape,\n        label: this.buttonLabel,\n        width: this.buttonWidth,\n        height: this.buttonHeight\n      };\n\n      if (this.buttonLayout === 'horizontal') {\n        settings.tagline = this.buttonTagline;\n      }\n\n      return settings;\n    }\n  }, {\n    key: \"renderButton\",\n    value: function renderButton() {\n      var _this3 = this;\n\n      paypal.Buttons({\n        env: this.useSandbox ? 'sandbox' : 'production',\n        style: this.getStyleSettings(),\n        createOrder: function createOrder(data, actions) {\n          _this3.removeError();\n\n          var amount = 0;\n\n          if (_this3.amountType === 'fixed') {\n            amount = _this3.amountFixed;\n          } else if (_this3.amountType === 'dynamic') {\n            amount = _this3.getFieldValue(_this3.amountVariable);\n          }\n          /* eslint-disable camelcase */\n\n\n          return actions.order.create({\n            intent: 'AUTHORIZE',\n            application_context: {\n              user_action: 'CONTINUE'\n            },\n            purchase_units: [{\n              amount: {\n                currency_code: _this3.currency,\n                value: amount\n              }\n            }]\n          });\n          /* eslint-enable camelcase */\n        },\n        onCancel: function onCancel(data, actions) {},\n        onError: function onError(err) {\n          _this3.addError(err);\n        },\n        onApprove: function onApprove(data, actions) {\n          // Authorize the transaction, instead of capturing. This will be done after form submit\n          actions.order.authorize().then(function (authorization) {\n            try {\n              var authorizationID = authorization.purchase_units[0].payments.authorizations[0].id;\n\n              _this3.updateInputs('paypalOrderId', data.orderID);\n\n              _this3.updateInputs('paypalAuthId', authorizationID);\n\n              if (!authorizationID) {\n                _this3.addError('Missing Authorization ID for approval.');\n              } else {\n                _this3.addSuccess((0,_utils_utils__WEBPACK_IMPORTED_MODULE_0__.t)('Payment authorized. Finalise the form to complete payment.'));\n              }\n            } catch (error) {\n              console.error(error);\n\n              _this3.addError('Unable to authorize payment. Please try again.');\n            }\n          });\n        }\n      }).render(this.$input);\n    }\n  }, {\n    key: \"onAfterSubmit\",\n    value: function onAfterSubmit(e) {\n      // Reset all hidden inputs\n      this.updateInputs('paypalOrderId', '');\n      this.updateInputs('paypalAuthId', '');\n      this.removeSuccess();\n      this.removeError();\n    }\n  }]);\n\n  return FormiePayPal;\n}(_payment_provider__WEBPACK_IMPORTED_MODULE_1__.FormiePaymentProvider);\nwindow.FormiePayPal = FormiePayPal;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/payments/paypal.js\n");

/***/ }),

/***/ "./src/js/utils/utils.js":
/*!*******************************!*\
  !*** ./src/js/utils/utils.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ensureVariable\": () => (/* binding */ ensureVariable),\n/* harmony export */   \"eventKey\": () => (/* binding */ eventKey),\n/* harmony export */   \"isEmpty\": () => (/* binding */ isEmpty),\n/* harmony export */   \"t\": () => (/* binding */ t),\n/* harmony export */   \"toBoolean\": () => (/* binding */ toBoolean)\n/* harmony export */ });\nvar isEmpty = function isEmpty(obj) {\n  return obj && Object.keys(obj).length === 0 && obj.constructor === Object;\n};\nvar toBoolean = function toBoolean(val) {\n  return !/^(?:f(?:alse)?|no?|0+)$/i.test(val) && !!val;\n};\nvar eventKey = function eventKey(eventName) {\n  var namespace = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n  if (!namespace) {\n    namespace = Math.random().toString(36).substr(2, 5);\n  }\n\n  return \"\".concat(eventName, \".\").concat(namespace);\n};\nvar t = function t(string) {\n  var replacements = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (window.FormieTranslations) {\n    string = window.FormieTranslations[string] || string;\n  }\n\n  return string.replace(/{([a-zA-Z0-9]+)}/g, function (match, p1) {\n    if (replacements[p1]) {\n      return replacements[p1];\n    }\n\n    return match;\n  });\n};\nvar ensureVariable = function ensureVariable(variable) {\n  var timeout = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100000;\n  var start = Date.now(); // Function to allow us to wait for a global variable to be available. Useful for third-party scripts.\n\n  var waitForVariable = function waitForVariable(resolve, reject) {\n    if (window[variable]) {\n      resolve(window[variable]);\n    } else if (timeout && Date.now() - start >= timeout) {\n      reject(new Error('timeout'));\n    } else {\n      setTimeout(waitForVariable.bind(this, resolve, reject), 30);\n    }\n  };\n\n  return new Promise(waitForVariable);\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvanMvdXRpbHMvdXRpbHMuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBTyxJQUFNQSxPQUFPLEdBQUcsU0FBVkEsT0FBVSxDQUFTQyxHQUFULEVBQWM7RUFDakMsT0FBT0EsR0FBRyxJQUFJQyxNQUFNLENBQUNDLElBQVAsQ0FBWUYsR0FBWixFQUFpQkcsTUFBakIsS0FBNEIsQ0FBbkMsSUFBd0NILEdBQUcsQ0FBQ0ksV0FBSixLQUFvQkgsTUFBbkU7QUFDSCxDQUZNO0FBSUEsSUFBTUksU0FBUyxHQUFHLFNBQVpBLFNBQVksQ0FBU0MsR0FBVCxFQUFjO0VBQ25DLE9BQU8sQ0FBQywyQkFBMkJDLElBQTNCLENBQWdDRCxHQUFoQyxDQUFELElBQXlDLENBQUMsQ0FBQ0EsR0FBbEQ7QUFDSCxDQUZNO0FBSUEsSUFBTUUsUUFBUSxHQUFHLFNBQVhBLFFBQVcsQ0FBU0MsU0FBVCxFQUFzQztFQUFBLElBQWxCQyxTQUFrQix1RUFBTixJQUFNOztFQUMxRCxJQUFJLENBQUNBLFNBQUwsRUFBZ0I7SUFDWkEsU0FBUyxHQUFHQyxJQUFJLENBQUNDLE1BQUwsR0FBY0MsUUFBZCxDQUF1QixFQUF2QixFQUEyQkMsTUFBM0IsQ0FBa0MsQ0FBbEMsRUFBcUMsQ0FBckMsQ0FBWjtFQUNIOztFQUVELGlCQUFVTCxTQUFWLGNBQXVCQyxTQUF2QjtBQUNILENBTk07QUFRQSxJQUFNSyxDQUFDLEdBQUcsU0FBSkEsQ0FBSSxDQUFTQyxNQUFULEVBQW9DO0VBQUEsSUFBbkJDLFlBQW1CLHVFQUFKLEVBQUk7O0VBQ2pELElBQUlDLE1BQU0sQ0FBQ0Msa0JBQVgsRUFBK0I7SUFDM0JILE1BQU0sR0FBR0UsTUFBTSxDQUFDQyxrQkFBUCxDQUEwQkgsTUFBMUIsS0FBcUNBLE1BQTlDO0VBQ0g7O0VBRUQsT0FBT0EsTUFBTSxDQUFDSSxPQUFQLENBQWUsbUJBQWYsRUFBb0MsVUFBQ0MsS0FBRCxFQUFRQyxFQUFSLEVBQWU7SUFDdEQsSUFBSUwsWUFBWSxDQUFDSyxFQUFELENBQWhCLEVBQXNCO01BQ2xCLE9BQU9MLFlBQVksQ0FBQ0ssRUFBRCxDQUFuQjtJQUNIOztJQUVELE9BQU9ELEtBQVA7RUFDSCxDQU5NLENBQVA7QUFPSCxDQVpNO0FBY0EsSUFBTUUsY0FBYyxHQUFHLFNBQWpCQSxjQUFpQixDQUFTQyxRQUFULEVBQXFDO0VBQUEsSUFBbEJDLE9BQWtCLHVFQUFSLE1BQVE7RUFDL0QsSUFBTUMsS0FBSyxHQUFHQyxJQUFJLENBQUNDLEdBQUwsRUFBZCxDQUQrRCxDQUcvRDs7RUFDQSxJQUFNQyxlQUFlLEdBQUcsU0FBbEJBLGVBQWtCLENBQVNDLE9BQVQsRUFBa0JDLE1BQWxCLEVBQTBCO0lBQzlDLElBQUliLE1BQU0sQ0FBQ00sUUFBRCxDQUFWLEVBQXNCO01BQ2xCTSxPQUFPLENBQUNaLE1BQU0sQ0FBQ00sUUFBRCxDQUFQLENBQVA7SUFDSCxDQUZELE1BRU8sSUFBSUMsT0FBTyxJQUFLRSxJQUFJLENBQUNDLEdBQUwsS0FBYUYsS0FBZCxJQUF3QkQsT0FBdkMsRUFBZ0Q7TUFDbkRNLE1BQU0sQ0FBQyxJQUFJQyxLQUFKLENBQVUsU0FBVixDQUFELENBQU47SUFDSCxDQUZNLE1BRUE7TUFDSEMsVUFBVSxDQUFDSixlQUFlLENBQUNLLElBQWhCLENBQXFCLElBQXJCLEVBQTJCSixPQUEzQixFQUFvQ0MsTUFBcEMsQ0FBRCxFQUE4QyxFQUE5QyxDQUFWO0lBQ0g7RUFDSixDQVJEOztFQVVBLE9BQU8sSUFBSUksT0FBSixDQUFZTixlQUFaLENBQVA7QUFDSCxDQWZNIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL2pzL3V0aWxzL3V0aWxzLmpzP2Q5ZWUiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IGlzRW1wdHkgPSBmdW5jdGlvbihvYmopIHtcbiAgICByZXR1cm4gb2JqICYmIE9iamVjdC5rZXlzKG9iaikubGVuZ3RoID09PSAwICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gT2JqZWN0O1xufTtcblxuZXhwb3J0IGNvbnN0IHRvQm9vbGVhbiA9IGZ1bmN0aW9uKHZhbCkge1xuICAgIHJldHVybiAhL14oPzpmKD86YWxzZSk/fG5vP3wwKykkL2kudGVzdCh2YWwpICYmICEhdmFsO1xufTtcblxuZXhwb3J0IGNvbnN0IGV2ZW50S2V5ID0gZnVuY3Rpb24oZXZlbnROYW1lLCBuYW1lc3BhY2UgPSBudWxsKSB7XG4gICAgaWYgKCFuYW1lc3BhY2UpIHtcbiAgICAgICAgbmFtZXNwYWNlID0gTWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc3Vic3RyKDIsIDUpO1xuICAgIH1cblxuICAgIHJldHVybiBgJHtldmVudE5hbWV9LiR7bmFtZXNwYWNlfWA7XG59O1xuXG5leHBvcnQgY29uc3QgdCA9IGZ1bmN0aW9uKHN0cmluZywgcmVwbGFjZW1lbnRzID0ge30pIHtcbiAgICBpZiAod2luZG93LkZvcm1pZVRyYW5zbGF0aW9ucykge1xuICAgICAgICBzdHJpbmcgPSB3aW5kb3cuRm9ybWllVHJhbnNsYXRpb25zW3N0cmluZ10gfHwgc3RyaW5nO1xuICAgIH1cblxuICAgIHJldHVybiBzdHJpbmcucmVwbGFjZSgveyhbYS16QS1aMC05XSspfS9nLCAobWF0Y2gsIHAxKSA9PiB7XG4gICAgICAgIGlmIChyZXBsYWNlbWVudHNbcDFdKSB7XG4gICAgICAgICAgICByZXR1cm4gcmVwbGFjZW1lbnRzW3AxXTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBtYXRjaDtcbiAgICB9KTtcbn07XG5cbmV4cG9ydCBjb25zdCBlbnN1cmVWYXJpYWJsZSA9IGZ1bmN0aW9uKHZhcmlhYmxlLCB0aW1lb3V0ID0gMTAwMDAwKSB7XG4gICAgY29uc3Qgc3RhcnQgPSBEYXRlLm5vdygpO1xuXG4gICAgLy8gRnVuY3Rpb24gdG8gYWxsb3cgdXMgdG8gd2FpdCBmb3IgYSBnbG9iYWwgdmFyaWFibGUgdG8gYmUgYXZhaWxhYmxlLiBVc2VmdWwgZm9yIHRoaXJkLXBhcnR5IHNjcmlwdHMuXG4gICAgY29uc3Qgd2FpdEZvclZhcmlhYmxlID0gZnVuY3Rpb24ocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICAgIGlmICh3aW5kb3dbdmFyaWFibGVdKSB7XG4gICAgICAgICAgICByZXNvbHZlKHdpbmRvd1t2YXJpYWJsZV0pO1xuICAgICAgICB9IGVsc2UgaWYgKHRpbWVvdXQgJiYgKERhdGUubm93KCkgLSBzdGFydCkgPj0gdGltZW91dCkge1xuICAgICAgICAgICAgcmVqZWN0KG5ldyBFcnJvcigndGltZW91dCcpKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHNldFRpbWVvdXQod2FpdEZvclZhcmlhYmxlLmJpbmQodGhpcywgcmVzb2x2ZSwgcmVqZWN0KSwgMzApO1xuICAgICAgICB9XG4gICAgfTtcblxuICAgIHJldHVybiBuZXcgUHJvbWlzZSh3YWl0Rm9yVmFyaWFibGUpO1xufTtcbiJdLCJuYW1lcyI6WyJpc0VtcHR5Iiwib2JqIiwiT2JqZWN0Iiwia2V5cyIsImxlbmd0aCIsImNvbnN0cnVjdG9yIiwidG9Cb29sZWFuIiwidmFsIiwidGVzdCIsImV2ZW50S2V5IiwiZXZlbnROYW1lIiwibmFtZXNwYWNlIiwiTWF0aCIsInJhbmRvbSIsInRvU3RyaW5nIiwic3Vic3RyIiwidCIsInN0cmluZyIsInJlcGxhY2VtZW50cyIsIndpbmRvdyIsIkZvcm1pZVRyYW5zbGF0aW9ucyIsInJlcGxhY2UiLCJtYXRjaCIsInAxIiwiZW5zdXJlVmFyaWFibGUiLCJ2YXJpYWJsZSIsInRpbWVvdXQiLCJzdGFydCIsIkRhdGUiLCJub3ciLCJ3YWl0Rm9yVmFyaWFibGUiLCJyZXNvbHZlIiwicmVqZWN0IiwiRXJyb3IiLCJzZXRUaW1lb3V0IiwiYmluZCIsIlByb21pc2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/js/utils/utils.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/js/payments/paypal.js");
/******/ 	
/******/ })()
;